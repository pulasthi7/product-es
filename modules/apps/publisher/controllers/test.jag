<%
//var core = require('rxt').core;
//var resources=require('rxt').resources;
//var ref=require('utils').reflection;
//var time=require('utils').time;
//var lcCore=require('lifecycle').core;
//var lcApi=require('lifecycle').api;
//var log = new Log();
//var carbon = require('carbon');
//log.info('Starting to force load');
//lcCore.force(-1234);
// var simplelc=lcCore.getJSONDef('MobileAppLifeCycle',-1234);//lcCore.getRawDef('ServiceLifeCycle',-1234);
//var lc=lcApi.getLifecycle('SampleLifeCycle2',-1234);
// print(simplelc);
//log.info(lc.nextStates('initial'));
//log.info(lc.transitionAction('Initial','Created'));
//log.info(lc.transitionExecution('initial','promote'));
//log.info('Finished force load');
/*var reg = org.wso2.carbon.context.RegistryType;
var CarbonConstants = Packages.org.wso2.carbon.CarbonConstants;
var GenericArtifactManager = Packages.org.wso2.carbon.governance.api.generic.GenericArtifactManager;
var PrivilegedCarbonContext = org.wso2.carbon.context.PrivilegedCarbonContext;
var currentContext = PrivilegedCarbonContext.getCurrentContext();
PrivilegedCarbonContext.startTenantFlow();
try {
    currentContext.setTenantDomain(carbon.server.tenantDomain({
        tenantId: -1234
    }));
    currentContext.setTenantId(-1234);
    currentContext.setUsername(CarbonConstants.REGISTRY_ANONNYMOUS_USERNAME);
    var sysGovRegistry = currentContext.getRegistry(reg.USER_GOVERNANCE);
    var mng = new GenericArtifactManager(sysGovRegistry.getChrootedRegistry("/_system/governance"), 'gadget');
} catch (e) {} finally {
    PrivilegedCarbonContext.endTenantFlow();
}*/
/*	var a={
		name:'John',
		age:'123',
		inv:{
			bottle:'7',
			items:{
				a:'a',
				b:'b'
			}
		}
	};

	var b={
		age:'58',
		height:'q',
		inv:{
			items:{
				b:'c'
			}
		}
	};

	ref.copyAllPropValues(a,a);*/
//log.info('a:'+stringify(a));
//log.info('b:'+stringify(b));
//log.info(time.getCurrentTime());
//print('Array: '+ref.isArray(['a','b']));
//print('Object: '+ref.isArray({}));
//var server=require('store').server;
//var registry=server.systemRegistry(-1234);
//core.init(-1234,registry);
//resources.manager(-1234);
//var manager=core.rxtManager(-1234);
//var ar=core.assetResources(-1234,'ebook');
//log.info(stringify(ar._default.server.toSource()));
//print(manager.listRxtFieldsOfType('gadget','file'));
//core.assetResources(-1234,'gadget');
//print(manager.listRxtTypeTables('gadget'));
//print(manager.listRxtTypes());
//print(manager.getRxtDefinition('gadget'));
//print(manager.getRxtStoragePath('api'));
// response.contentType = "application/json; charset=UTF-8";
// var url = "http://ripsac2.web2labs.net/mq/v1.0/api-docs";
// var log = new Log();
// url = url.trim();
// //@todo need to validate inputs
// var data = {};
// var content = get(url, data, "json");
// var swaggerJson = content.data;
// var xhr = new XMLHttpRequest();
// for (var i = 0; i < swaggerJson.apis.length; i++) {
//     var content = get(url + swaggerJson.apis[i].path, data, "json");
//     xhr.open("GET", url + swaggerJson.apis[i].path);
//     //xhr.setRequestHeader("Content-Type" , "application/json");
//     xhr.send();
//     var responseStr = xhr.responseText;
//     //swaggerJson.apis[i].file = content.data;
//     swaggerJson.apis[i].file = responseStr;
// }
// print(responseStr);
//print("<br/><br/><br/>");
//print(xhr.responseText);
//print(swaggerJson);
//var app = require('rxt').app;
//var server=require('store').server;
//var opts = app.getAuthenticationDetails(-1234);
//var configs=server.configs(-1234);
//print(configs['server.user.options']);
//print(opts);

var log=new Log();
log.info('Hit!');
var files=request.getAllFiles();
var file=files['img'];
log.info('File size: '+file.getLength());
 var systemProcess = require('process');
 var parent = 'file:///' + (systemProcess.getProperty('jaggery.home') || systemProcess.getProperty('carbon.home')).replace(/[\\]/g, '/').replace(/^[\/]/g, '');
 //print(parent);
 //var tool=new File(file.getStream());
 //var file=new File(parent+'/test.txt');
 path=parent+'/test.png';
 log.info('name: '+file.getName());
 try{
 	 //file.open('r');
     //file.open('w');
     //file.write('hello!');
     file.move(path);
 }catch(e){
     print(e);
 } finally{
     file.close();
 }

print('done');
 %>